# VistterStream Docker Environment Configuration
# Copy this file to .env and customize for your deployment

# Database path inside container
DATABASE_URL=sqlite:////data/vistterstream.db

# Uploads directory inside container
UPLOADS_DIR=/data/uploads

# RTMP relay service name (for Docker networking)
RTMP_RELAY_HOST=rtmp-relay
RTMP_RELAY_PORT=1935

# CORS origins (comma-separated)
# For local development:
CORS_ALLOW_ORIGINS=http://localhost:3000,http://localhost:5173
# For Raspberry Pi deployment, update to include Pi's IP:
# CORS_ALLOW_ORIGINS=http://192.168.1.100:3000,http://localhost:3000

# ============================================================================
# YouTube Live Stream Watchdog Configuration
# ============================================================================
# Required for automatic stream health monitoring and recovery
# Get these from YouTube Studio and Google Cloud Console

# YouTube Data API v3 Key
# Get from: https://console.cloud.google.com/apis/credentials
# Legacy API key (kept for compatibility)
YOUTUBE_API_KEY=your_youtube_api_key_here
# OAuth client configuration for automated broadcast control
YOUTUBE_OAUTH_CLIENT_ID=your_google_oauth_client_id
YOUTUBE_OAUTH_CLIENT_SECRET=your_google_oauth_client_secret
# Public HTTPS URL that Google redirects to after authorization
# (e.g., https://your-server.example.com/api/destinations/youtube/oauth/callback)
YOUTUBE_OAUTH_REDIRECT_URI=https://your-public-backend-host/api/destinations/youtube/oauth/callback

# YouTube Stream ID
# Get from YouTube Studio or API: liveStreams.list endpoint
YOUTUBE_STREAM_ID=your_stream_id_here

# YouTube Broadcast ID
# Get from YouTube Studio or API: liveBroadcasts.list endpoint
YOUTUBE_BROADCAST_ID=your_broadcast_id_here

# YouTube Watch URL (public URL of your live stream)
# Format: https://www.youtube.com/watch?v=VIDEO_ID
YOUTUBE_WATCH_URL=https://www.youtube.com/watch?v=your_video_id

# YouTube RTMP Stream Key (for encoder)
# Get from YouTube Studio > Stream Settings
YOUTUBE_STREAM_KEY=xxxx-xxxx-xxxx-xxxx-xxxx

# RTMP Source URL (if streaming from local RTMP server to YouTube)
RTMP_SOURCE_URL=rtmp://localhost/live/stream

# Encoder systemd service name (for watchdog to restart)
ENCODER_SERVICE_NAME=vistterstream-encoder

# Watchdog check interval in seconds (how often to check stream health)
WATCHDOG_CHECK_INTERVAL=30

# Enable frame probing (requires yt-dlp installed)
# This verifies actual video frames are flowing, not just API health
WATCHDOG_ENABLE_FRAME_PROBE=false

# Enable daily broadcast reset (resets stream at specified hour to prevent drift)
WATCHDOG_ENABLE_DAILY_RESET=false

# Hour (0-23 UTC) to perform daily reset if enabled
WATCHDOG_DAILY_RESET_HOUR=3

# Watchdog log file path
WATCHDOG_LOG_FILE=/var/log/vistterstream-watchdog.log


